!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_type_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>[...e].some(e=>!e.validity.valid))(e)?(t.disabled=!0,t.classList.add(r.inactiveButtonClass)):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach(n=>{((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);r(o,a,n),o.forEach(s=>{s.addEventListener("input",function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(o,a,n)})})})(n,e)})};function o(e,t,r="Save",n="Saving..."){t?(console.log(`Setting text to ${n}`),e.textContent=n):e.textContent=r}n(e);const a=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse)}createCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleServerResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleServerResponse)}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}handleCardLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9174fee8-14cf-423d-8847-48b971305a7a","Content-Type":"application/json"}});a.getAppInfo().then(([e,t])=>{e.forEach(function(e){const t=N(e);U.append(t)}),m.textContent=t.name,_.textContent=t.about,g.src=t.avatar}).catch(console.error);const s=document.querySelector(".profile__edit-btn"),c=document.querySelector("#edit-profile-modal"),i=(c.querySelector("#profile-submit"),c.querySelector(".modal__close-btn")),l=c.querySelector(".modal__form"),d=l.querySelector("#profile-name-input"),u=l.querySelector("#profile-desc-input"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__new-post"),f=document.querySelector("#new-post-modal"),v=(f.querySelector("#card-submit"),f.querySelector(".modal__close-btn")),p=f.querySelector(".modal__form"),y=p.querySelector("#card-caption-input"),S=p.querySelector("#card-image-input"),b=document.querySelector(".profile__avatar-btn"),q=document.querySelector("#edit-avatar-modal"),E=q.querySelector(".modal__close-btn"),L=(q.querySelector("#card-submit"),q.querySelector("#profile-avatar-input")),C=q.querySelector(".modal__form"),g=document.querySelector(".profile__avatar"),k=document.querySelector("#card-template").content.querySelector(".card"),U=document.querySelector(".cards__list"),x=document.querySelector("#delete-modal"),$=x.querySelector(".modal__close-btn"),T=x.querySelector("#delete-form");let A,D;const I=document.querySelector(".btn_cancel"),R=document.querySelector("#image-preview-modal"),w=R.querySelector(".modal__image"),P=R.querySelector(".modal__close_type_preview"),B=R.querySelector(".modal__caption");function N(e){let t=k.cloneNode(!0);const r=t.querySelector(".card__title"),n=t.querySelector(".card__image");n.src=e.link,n.alt=e.name,r.textContent=e.name;const o=t.querySelector(".card__heart-btn");return o.addEventListener("click",t=>function(e,t){const r=e.target,n=r.classList.contains("card__heart-btn_active");a.handleCardLike(t._id,n).then(()=>{r.classList.toggle("card__heart-btn_active")}).catch(console.error)}(t,e)),e.isLiked&&o.classList.add("card__heart-btn_active"),t.querySelector(".card__delete-btn").addEventListener("click",()=>function(e,t){A=e,D=t,J(x)}(t,e._id)),n.addEventListener("click",()=>{w.src=e.link,w.alt=e.name,B.textContent=e.name,J(R)}),t}function O(e){"Escape"!==e.key&&"Esc"!==e.key||H(document.querySelector(".modal_is-opened"))}function j(e){e.target.classList.contains("modal_is-opened")&&H(e.target)}function J(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",O),e.addEventListener("click",j)}function H(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",O),e.removeEventListener("click",j)}I.addEventListener("click",function(){o(I,!0,"Cancel","Canceling..."),H(x),setTimeout(()=>{o(I,!1,"Cancel","Canceling...")},300)}),$.addEventListener("click",function(){H(x)}),s.addEventListener("click",function(){var r,n;J(c),d.value=m.textContent,u.value=_.textContent,r=l,n=e,[d,u].forEach(e=>{t(r,e,n)})}),i.addEventListener("click",function(){H(c)}),h.addEventListener("click",function(){J(f)}),v.addEventListener("click",function(){H(f)}),b.addEventListener("click",function(){J(q)}),E.addEventListener("click",function(){H(q)}),C.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;o(t,!0),a.editAvatarInfo(L.value).then(e=>{g.src=e.avatar,H(q),console.log(e.avatar)}).catch(console.error).finally(()=>{setTimeout(()=>{o(t,!1)},300)})}),l.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;o(t,!0),a.editUserInfo({name:d.value,about:u.value}).then(e=>{m.textContent=e.name,_.textContent=e.about,H(c)}).catch(console.error).finally(()=>{setTimeout(()=>{o(t,!1)},300)})}),T.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;o(t,!0,"Delete","Deleting..."),a.deleteCard(D).then(()=>{A.remove(),H(x)}).catch(console.error).finally(()=>{setTimeout(()=>{o(t,!1,"Delete","Deleting...")},300)})}),p.addEventListener("submit",function(t){t.preventDefault();const n={name:y.value,link:S.value},s=t.submitter;o(s,!0),a.createCard(n).then(e=>{const t=N(e);U.prepend(t)}).catch(console.error).finally(()=>{setTimeout(()=>{o(s,!1)},300)}),t.target.reset(),r([y,S],t.submitter,e),H(f)}),P.addEventListener("click",function(){H(R)}),n(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,